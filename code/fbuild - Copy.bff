//https://github.com/fastbuild/fastbuild/blob/main/Code/fbuild.bff
// HelloWorld
//------------------------------------------------------------------------------

#include "fbuild\visualstudio\visualstudio.bff"
#include "fbuild\windows\windows.bff"
#include "fbuild\helperfunctions.bff"

//Print(.VisualStudioSettings)

// Settings
//------------------------------------------------------------------------------
Settings
{
    #if __WINDOWS__
        #import TMP
        .Environment    = { "PATH=$VS_PATH$;$WINDOWS_SDK_2019_PATH$",
                            "TMP=$TMP$",
                            "SystemRoot=C:\Windows" }
    #endif
}

//------------------------------------------------------------------------------
// Config Defines
//------------------------------------------------------------------------------
.Debug_Config =
[
    .CompilerOptions                = ' -DDEBUG -DPROFILING_ENABLED'
    .CompilerOptionsC               = .CompilerOptions
    .BuildConfigName                = 'Debug'
]
.Profile_Config =
[
    .CompilerOptions                = ' -DRELEASE -DPROFILING_ENABLED'
    .CompilerOptionsC               = .CompilerOptions
    .BuildConfigName                = 'Profile'
]
.Release_Config =
[
    .CompilerOptions                = ' -DRELEASE'
    .CompilerOptionsC               = .CompilerOptions
    .CompilerOptionsDeoptimized     = .CompilerOptions
    .BuildConfigName                = 'Release'
]

//------------------------------------------------------------------------------
// Optimizations (MSVC)
//------------------------------------------------------------------------------
#if __WINDOWS__
    .Debug_Optimizations_MSVC =
    [
        .CompilerOptions                = ' /MTd /Od /RTC1 /GS /Oy-'
        .CompilerOptionsC               = .CompilerOptions
    ]
    .Profile_Optimizations_MSVC =
    [
        .CompilerOptions                = ' /MT /Ox /Oy /Oi /GS- /GF /Gy /Gw /Zo'
        .CompilerOptionsC               = .CompilerOptions
        .LinkerOptions                  = ' /OPT:REF,ICF'
    ]
    .Release_Optimizations_MSVC =
    [
        Using( .Profile_Optimizations_MSVC )
        .CompilerOptionsDeoptimized     = .CompilerOptions
                                        - ' /Ox'
                                        + ' /Od'
    ]
#endif

// X64
//------------------------------------------------------------------------------
#if __WINDOWS__
    .X64BaseConfig              = .ToolChain_VS_Windows_X64
                                + .Windows10_SDK_X64
    .X64DebugConfig             = .X64BaseConfig
                                + .Debug_Config
                                + .Debug_Optimizations_MSVC
    .X64ReleaseConfig           = .X64BaseConfig
                                + .Release_Config
                                + .Release_Optimizations_MSVC
    .X64ProfileConfig           = .X64BaseConfig
                                + .Profile_Config
                                + .Profile_Optimizations_MSVC
#endif

//------------------------------------------------------------------------------
//
//------------------------------------------------------------------------------
.OutputBase = '../build'

//------------------------------------------------------------------------------
// VisualStudio Project Generation
//------------------------------------------------------------------------------
#if __WINDOWS__
    .ProjectCommon =
    [
        .ProjectBuildCommand        = 'cd ^$(SolutionDir)\..\..\Code\ & fbuild -vs -dist -monitor -cache ^$(ProjectName)-^$(Configuration)'
        .ProjectRebuildCommand      = 'cd ^$(SolutionDir)\..\..\Code\ & fbuild -vs -dist -monitor -cache -clean ^$(ProjectName)-^$(Configuration)'
        .OutputDirectory            = '^$(SolutionDir)\Temp'
        .IntermediateDirectory      = '^$(SolutionDir)\Temp'
        .BuildLogFile               = '^$(SolutionDir)\Temp\^$(ProjectName)-^$(Configuration).log'
        .Platform                   = 'x64'
        .PlatformToolset            = '$VS_PlatformToolset$'
    ]

    .Project_x64_Debug        = [ Using( .ProjectCommon ) .SolutionPlatform = 'x64'         .SolutionConfig = 'Debug'   .Config = '$SolutionPlatform$-$SolutionConfig$' ]
    .Project_x64_Profile      = [ Using( .ProjectCommon ) .SolutionPlatform = 'x64'         .SolutionConfig = 'Profile' .Config = '$SolutionPlatform$-$SolutionConfig$' ]
    .Project_x64_Release      = [ Using( .ProjectCommon ) .SolutionPlatform = 'x64'         .SolutionConfig = 'Release' .Config = '$SolutionPlatform$-$SolutionConfig$' ]
#endif

// Configurations
//------------------------------------------------------------------------------
#if __WINDOWS__
    .BuildConfigs               = { .X64DebugConfig, .X64ProfileConfig, .X64ReleaseConfig }
#endif

.Targets_x64_Debug = {}
.Targets_x64_Profile = {}
.Targets_x64_Release = {}


#include "test.bff"

// Aliases : All-$Platform$-$Config$
//------------------------------------------------------------------------------
ForEach( .BuildConfig in .BuildConfigs )
{
    Using( .BuildConfig )

    Alias( 'All-$Platform$-$BuildConfigName$' ) { .Targets = .'Targets_$Platform$_$BuildConfigName$' }
}

// Exes
//------------------------------------------------------------------------------
Alias( 'Exes' )
{
    .Targets    = {
                    'Test-Debug',         'Test-Profile',       'Test-Release' }
}

// Aliases : All-$Platform$
//------------------------------------------------------------------------------
.Platforms =
{
    'x64'
}
.PlatformConfigs_x64           = { 'Debug', 'Profile', 'Release' }

ForEach( .Platform in .Platforms )
{
    Alias( 'All-$Platform$' )
    {
        .Targets = {}
        ForEach( .Config in .'PlatformConfigs_$Platform$' )
        {
                ^Targets + { 'All-$Platform$-$Config$' }
        }
    }
}

// Aliases : All
//------------------------------------------------------------------------------
#if __WINDOWS__
    Alias( 'All' )
    {
        .Targets        = {
                            'All-x64'
                          }
    }
#endif

// Visual Studio Solution
//------------------------------------------------------------------------------
#if __WINDOWS__
    // 'All' - Compile everything
    {
        .ExtraOptions   = [ .ProjectInputPaths = {} ]
        .ProjectConfigs = {}
        ForEach( .BuildConfig in .BuildConfigs )
        {
            Using( .BuildConfig )
            .ProjectConfig          = [ Using( .'Project_$Platform$_$BuildConfigName$' ) .Target = 'All-$Platform$-$BuildConfigName$' ]
            ^ProjectConfigs         + .ProjectConfig
        }
        CreateVCXProject_Lib( 'All', '/', .ProjectConfigs, .ExtraOptions )
    }

    // 'SDKs' - Browse Platform/Compiler SDKs
    {
        .ExtraOptions   = [ .ProjectAllowedFileExtensions = '*.bff' ]
        .ProjectConfigs = {}
        ForEach( .BuildConfig in .BuildConfigs )
        {
            Using( .BuildConfig )
            .ProjectConfig          = [ Using( .'Project_$Platform$_$BuildConfigName$' ) ]
            ^ProjectConfigs         + .ProjectConfig
        }
        CreateVCXProject_Lib( 'SDKs', '../External/SDK/', .ProjectConfigs, .ExtraOptions )
    }

    // 'Scripts' - Helper scripts
    {
        .ExtraOptions   = [ .ProjectAllowedFileExtensions = '*.py' ]
        .ProjectConfigs = {}
        ForEach( .BuildConfig in .BuildConfigs )
        {
            Using( .BuildConfig )
            .ProjectConfig          = [ Using( .'Project_$Platform$_$BuildConfigName$' ) ]
            ^ProjectConfigs         + .ProjectConfig
        }
        CreateVCXProject_Lib( 'Scripts', '../Scripts/', .ProjectConfigs, .ExtraOptions )
    }

    // 'UpdateSolution' - Regenerate projects/solutions
    {
        .ExtraOptions   = [ .ProjectInputPaths = {} ]
        .ProjectConfigs = {}
        ForEach( .BuildConfig in .BuildConfigs )
        {
            Using( .BuildConfig )
            .ProjectConfig          = [
                                        Using( .'Project_$Platform$_$BuildConfigName$' )
                                        .ProjectBuildCommand    = 'cd ^$(SolutionDir)\..\..\Code\ & fbuild solution -vs'
                                        .ProjectRebuildCommand  = 'cd ^$(SolutionDir)\..\..\Code\ & fbuild solution -vs -clean'
                                      ]
            ^ProjectConfigs         + .ProjectConfig
        }
        CreateVCXProject_Lib( 'UpdateSolution', '/', .ProjectConfigs, .ExtraOptions )
    }

    VSSolution( 'solution' )
    {
        .SolutionOutput     = '../tmp/VisualStudio/FASTBuild.sln'
        .SolutionProjects   = { 'All-proj',
                                'UpdateSolution-proj',
                              }
        .SolutionBuildProject = 'All-proj'
        .SolutionConfigs = {}
        ForEach( .BuildConfig in .BuildConfigs )
        {
            Using( .BuildConfig )
            .SolutionConfig         = [ Using( .'Project_$Platform$_$BuildConfigName$' ) ]
            ^SolutionConfigs        + .SolutionConfig
        }

        .SolutionVisualStudioVersion = '$VS_SolutionVersion$'

        // Work around for Visual Studio F5 behaviour up-to-date check
        //.Deps               = [
        //                        .Projects = { 'Test-proj' }
        //                        .Dependencies = { 'All-proj' }
        //                      ]
        //.SolutionDependencies = { .Deps }

        .Folder_Config =
        [
            .Path           = 'Config'
            .Items          = {
                                'fbuild.bff'
                                '.FASTBuild/HelperFunctions.bff'
                              }
        ]
        //.Folder_External =
        //[
        //    .Path           = 'External'
        //    .Projects       = { 'LZ4-proj', 'SDKs-proj', 'xxHash-proj', 'Zstd-proj' }
        //]
        //.Folder_Scripts =
        //[
        //    .Path           = 'Scripts'
        //    .Projects       = { 'Scripts-proj' }
        //]
        //.Folder_Test =
        //[
        //    .Path           = 'Test'
        //    .Projects       = { 'CoreTest-proj', 'FBuildTest-proj', 'OSUITest-proj', 'TestFramework-proj' }
        //]
        //.Folder_Libs =
        //[
        //    .Path           = 'Libs'
        //    .Projects       = { 'Core-proj', 'FBuildCore-proj', 'OSUI-proj' }
        //]
        //.Folder_Apps =
        //[
        //    .Path           = 'Apps'
        //    .Projects       = { 'FBuild-proj', 'FBuildWorker-proj' }
        //]
        //.SolutionFolders    = { .Folder_Config, .Folder_Scripts, .Folder_Test, .Folder_Libs, .Folder_Apps }
    }
#endif

