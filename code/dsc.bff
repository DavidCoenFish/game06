#once
//https://www.fastbuild.org/docs/documentation.html

//#define DEVELOPMENT_BUILD_CMD
//#define DEBUG_SDK

.SolutionItemArray = {}
{
    .temp =  [
        .Path           = "solution_items"
        .Items = { "dsc.cmd", "dsc.bff", "todo.txt" }
    ]
    ^SolutionItemArray + .temp
}
{
    .temp = [
        .Path           = "parent"
        .Items = { 
            "../.gitignore",
            "../commit.cmd",
            "../launch_visual_studio_code.cmd",
            "../notes.txt",
            "../README.md",
            "../Reset.cmd",
            "../sync.cmd",
            "../todo.txt"
            }
    ]
    ^SolutionItemArray + .temp;
}
{
    .temp = [
        .Path           = "parent/design"
        .Items = { 
            "../design/rpg_legendary_quest_00.txt",
            "../design/rpg_succubus_survival_00.txt",
            "../design/rts_mold_00.txt",
            "../design/sandbox_jank_00.txt",
            }
    ]
    ^SolutionItemArray + .temp;
}
{
    .temp = [
        .Path           = "parent/script/hunts_goblins"
        .Items = { 
            "../script/hunts_goblins/draft00.txt",
            "../script/hunts_goblins/draft01.txt",
            }
    ]
    ^SolutionItemArray + .temp;
}
{
    .temp = [
        .Path           = "parent/script/trailer_bridge_archer"
        .Items = { 
            "../script/trailer_bridge_archer/draft00.txt",
            }
    ]
    ^SolutionItemArray + .temp;
}
{
    .temp = [
        .Path           = "parent/script/trailer_explorer_loop"
        .Items = { 
            "../script/trailer_explorer_loop/draft00.txt",
            }
    ]
    ^SolutionItemArray + .temp;
}

.SolutionItemsSdkProject = {}
.SolutionItemsStaticLibProject = {}
.SolutionItemsApplicationProject = {}
.SolutionProjects = {}
.SolutionBuildProject = ""

// sdk folder populated by
//vcpkg install harfbuzz

#include "fbuild\dsc.bff"
#include "staticlib\dsc.bff"
#include "application\dsc.bff"

VSSolution("solution")
{
    .SolutionOutput = "solution.sln"
    .SolutionConfigs = {}
    .SolutionBuildProject = ^SolutionBuildProject
    .SolutionDeployProjects = ^SolutionBuildProject
    ForEach( .Config in .ConfigurationArray )
    {            
        ^SolutionConfigs + .Config
    }

    .SolutionFolders = .SolutionItemArray;
    {
        .temp = [
            .Path           = "sdk"
            .Projects       = .SolutionItemsSdkProject
        ]
        ^SolutionFolders + .temp
    }

    {
        .temp = [
            .Path           = "staticlib"
            .Projects       = .SolutionItemsStaticLibProject
        ]
        ^SolutionFolders + .temp
    }

    {
        .temp = [
            .Path           = "application"
            .Projects       = .SolutionItemsApplicationProject
        ]
        ^SolutionFolders + .temp
    }
}

Alias("all")
{
	.Targets = {"solution"}
}
